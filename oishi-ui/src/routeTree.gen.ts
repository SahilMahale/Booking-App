/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './Pages/__root'
import { Route as AuthImport } from './Pages/_auth'
import { Route as IndexImport } from './Pages/index'
import { Route as UsersIndexImport } from './Pages/Users/index'
import { Route as SignUpIndexImport } from './Pages/SignUp/index'
import { Route as LoginIndexImport } from './Pages/Login/index'
import { Route as AuthHomeImport } from './Pages/_auth.Home'
import { Route as AuthBookTablesImport } from './Pages/_auth.Book/Tables'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  path: '/Users/',
  getParentRoute: () => rootRoute,
} as any)

const SignUpIndexRoute = SignUpIndexImport.update({
  path: '/SignUp/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/Login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  path: '/Home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBookTablesRoute = AuthBookTablesImport.update({
  path: '/Book/Tables',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/Home': {
      id: '/_auth/Home'
      path: '/Home'
      fullPath: '/Home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/Login/': {
      id: '/Login/'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/SignUp/': {
      id: '/SignUp/'
      path: '/SignUp'
      fullPath: '/SignUp'
      preLoaderRoute: typeof SignUpIndexImport
      parentRoute: typeof rootRoute
    }
    '/Users/': {
      id: '/Users/'
      path: '/Users'
      fullPath: '/Users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/Book/Tables': {
      id: '/_auth/Book/Tables'
      path: '/Book/Tables'
      fullPath: '/Book/Tables'
      preLoaderRoute: typeof AuthBookTablesImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({ AuthHomeRoute, AuthBookTablesRoute }),
  LoginIndexRoute,
  SignUpIndexRoute,
  UsersIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/Login/",
        "/SignUp/",
        "/Users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/Home",
        "/_auth/Book/Tables"
      ]
    },
    "/_auth/Home": {
      "filePath": "_auth.Home.tsx",
      "parent": "/_auth"
    },
    "/Login/": {
      "filePath": "Login/index.tsx"
    },
    "/SignUp/": {
      "filePath": "SignUp/index.tsx"
    },
    "/Users/": {
      "filePath": "Users/index.tsx"
    },
    "/_auth/Book/Tables": {
      "filePath": "_auth.Book/Tables.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
